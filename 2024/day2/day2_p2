#!/usr/bin/env bash

# return 1 if safe, 0 if not safe
issafe() {
	local array=($@)
	local len=${#array[@]}
	local tmp=$((array[1] - array[0]))
	for ((k=1; k < len; k++))
	do
		local prev=${array[k-1]}
		local curr=${array[k]}
		local diff=$((curr - prev))
		local dist=${diff#-}
		# checking if all increasing or all decreasing
		if (( diff < 0 && tmp > 0 ))
		then return 1
		elif (( diff > 0 && tmp < 0))
		then return 1
		fi
		# checking the level is within range
		if ((dist < 1 || dist > 3))
		then return 1
		fi
	done
	return 0
}

dampener() {
	local arr=($@)
	local len=${#arr[@]}
	for ((i = 0; i < len; i++))
	do
		local new_arr=()
		for ((j = 0; j < len; j++))
		do
			((j != i)) && new_arr+=("${arr[j]}")
		done
		issafe "${new_arr[@]}" && return 0
	done
	return 1
}

count=0
while read -r line
do
	arr=($line)
	issafe ${arr[@]}
	status=$?
	if ((status == 0))
	then ((count++))
	else
		dampener "${arr[@]}" && ((count++))
	fi
done < $1
echo "count: " $count
